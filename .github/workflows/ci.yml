name: ci

on: [push, pull_request]

jobs:

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        aiida: [{version: 'aiida-core==1.6.8', name: '1.6.8'}, {version: 'aiida-core==2.0.1', name: '2.0.1'}]
        masci-tools: [{version: 'masci-tools', name: ''}]
        allowed-to-fail: [false]
        backend: ['django']
        include:
          # for python 3.9 we also test with the latest aiida-core version and the latest version of masci-tools
          - python-version: 3.9
            aiida: {version: 'git+https://github.com/aiidateam/aiida-core.git@main', name: 'latest'}
            masci-tools: {version: 'git+https://github.com/JuDFTteam/masci-tools.git@develop', name: '-masci-develop'}
            allowed-to-fail: true
          - python-version: 3.9
            aiida: {version: 'aiida-core==1.6.8', name: '1.6.8'}
            masci-tools: {version: 'git+https://github.com/JuDFTteam/masci-tools.git@develop', name: '-masci-develop'}
            allowed-to-fail: true
        exclude:
          # aiida-core>=2.0 needs at least python 3.8
          - python-version: 3.7
            aiida: {version: 'aiida-core==2.0.1', name: '2.0.1'}
            masci-tools: {version: 'masci-tools', name: ''}
            allowed-to-fail: false

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_${{ matrix.backend }}
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install ${{ matrix.aiida.version }}
        pip install ${{ matrix.masci-tools.version }}
        pip install .[testing]
        pip install reentry
        reentry scan
        pip freeze

    - name: Run test suite
      env:
        # show timings of tests
        PYTEST_ADDOPTS: "--durations=0"
      run: py.test --cov aiida_spirit --cov-append .

    - name: Upload code coverage
      run: |
        pip install codecov
        codecov

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[docs]
        pip install reentry
        reentry scan -r aiida
    - name: Build docs
      run: cd docs && make

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      run: |
        pip install --upgrade pip
        pip install -e .[pre-commit,docs,testing]
        pip install reentry
        reentry scan -r aiida
    - name: Run pre-commit
      run: |
        pre-commit install
        pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
